//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//


#[test]
fn stringify_encoded() {
    const object = new {
        a: 'hello',
        b: 42,
        c: true,
    };
    const encoded = stringify('urlencoded', object);
    assert_eq(encoded, 'a=hello&b=42&c=true');
    drop(object);
}

#[test]
fn stringify_nested() {
    const object = new {
        sub: new {
            val: 42
        },
        msg: 'hi'
    };
    const encoded = stringify('urlencoded', object);
    assert_eq(encoded, 'msg=hi&sub%5Bval%5D=42');
    drop(object);
}

#[test]
fn parse_encoded() {
    const encoded = 'a=hello&b=42&c=true';
    const object = new {};

    parse(encoded, object, 'urlencoded');
    assert_eq(object.a, 'hello');
    assert_eq(object.b, 42);
    assert_eq(object.c, true);
    drop(object);
}

#[test]
fn parse_nested() {
    const encoded = 'msg=hi&sub%5Bval%5D=42';
    const object = new {};

    parse(encoded, object, 'www-form'); // alias format for 'urlencoded'
    assert_eq(object.sub.val, 42);
    assert_eq(object.msg, 'hi');
    drop(object);
}
