//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//


#[test]
fn parse_bytes() {
    const bytes: blob = 'hello, world';
    const object = new {};
    
    parse(bytes, object, format = 'bytes');
    assert_eq(typeof object.bytes, 'blob');
    assert_eq(object.bytes as str, 'hello, world');
    drop(object);
}

#[test]
fn parse_string_bytes() {
    const text = 'hello, world';
    const object = new {};
    
    parse(text, object, 'bytes'); // auto utf-8 conversion
    assert_eq(typeof object.bytes, 'blob');
    assert_eq(object.bytes as str, 'hello, world');
    drop(object);
}

#[test]
fn blobify_bytes() {
    const object = new {
        blob bytes: 'hello, world'
    };
    const bytes = blobify('bytes', object);
    assert_eq(typeof bytes, 'blob');
    assert_eq(bytes as str, 'hello, world');
    drop(object);
}

#[test]
fn stringify_bytes() {
    const object = new {
        blob bytes: 'hello, world'
    };
    const text = stringify('bytes', object); // auto utf-8 conversion
    assert_eq(typeof text, 'str');
    assert_eq(text, 'hello, world');
    drop(object);
}
