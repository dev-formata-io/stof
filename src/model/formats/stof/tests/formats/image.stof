//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//


import './norse.png';
deep_test: false;

#[test]
fn imported_image() {
    if (lib('Image')) {
        assert(self.image);
        assert_eq(typeof self.image, 'data');
        assert_eq(typename self.image, 'Data<Image>');
        assert_eq(Data.libname(self.image), 'Image');
    }
}

#[test]
fn resize() {
    if (lib('Image') && self.deep_test) {
        const clone = copy(self.image);
        assert(Data.exists(clone) && Data.exists(self.image) && self.image != clone);
        assert_eq(Data.libname(clone), 'Image');

        assert_eq(clone.width(), 1200);
        assert_eq(clone.height(), 1200);
        assert_eq(Image.width(clone), 1200);

        assert(clone.resize(500, 500));
        assert_eq(clone.width(), 500);
        assert_eq(clone.height(), 500);

        drop(clone);
        assert_not(Data.exists(clone));
    }
}

#[test]
fn to_from_bmp() {
    if (lib('Image') && self.deep_test) {
        const bmp = self.image.bmp();
        assert_eq(typeof bmp, 'blob');

        const image = Image.from_blob(bmp);
        assert_eq(typeof image, 'data');
        assert_eq(Data.libname(image), 'Image');
        assert_eq(image.height(), 1200);
        assert_eq(image.width(), 1200);

        drop(image);
        assert_not(Data.exists(image));
    }
}
