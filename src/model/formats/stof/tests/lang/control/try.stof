//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//


#[test]
fn return_from_try() {
    const func = ():int => {
        try {
            return 42;
        } catch {
            return 100;
        }
    };
    assert_eq(func(), 42);
}

#[test]
fn try_error_val() {
    let caught;

    try throw({42, 78, 'hi'});
    catch (error: unknown) {
        caught = true;
        assert_eq(error, {42, 78, 'hi'});
    }

    assert(caught);
}

#[test]
fn std_error() {
    let caught;

    try Std.DNE('this function does not exist');
    catch (error: str) {
        caught = true;
        assert(error.contains('FuncDne'));
    }

    assert(caught);
}

#[test]
fn nested_try() {
    let caught;
    try {
        try {
            try {
                throw('hello')
            } catch (error: str) {
                throw(error + ', world');
            }
        } catch (error: str) {
            throw(error + '!!');
        }
    } catch (error: str) {
        caught = error;
    }
    assert_eq(caught, 'hello, world!!');
}
