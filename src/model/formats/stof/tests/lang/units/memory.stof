//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//


#[test]
fn convert_bits() {
    const mem: bit = 1_000_000bits;
    assert_eq(mem as byte, 125_000bytes);

    assert_eq((mem as kibibytes).round(2), 122.07KiB);
    assert_eq((mem as MiB).round(2), 0.12mebibytes);
    assert_eq((mem as gibibytes).round(5), 0.00012GiB);

    assert_eq(mem as kilobytes, 125KB);
    assert_eq(mem as megabytes, 0.125MB);
    assert_eq(mem as gigabytes, 0.000125GB);
}

#[test]
fn convert_gigabytes() {
    const mem: GB = 1_000;
    assert_eq((mem as TB).round(2), 1TB);
    assert_eq((mem as TiB).round(2), 0.91TiB);
    assert_eq((1_000GiB as TiB).round(2), 0.98TiB);
}

#[test]
fn convert_yobibytes() {
    const res = 56YiB as YB;
    assert_eq(res.round(2), 67.70YB);

    const giga = 56YiB as GB;
    assert_eq(giga, 67_699_845_898_419_240GB);
}

#[test]
fn binary_vs_base10() {
    assert(1KB < 1MB < 1GB < 1TB < 1PB < 1EB < 1ZB < 1YB);
    assert(1KiB < 1MiB < 1GiB < 1TiB < 1PiB < 1EiB < 1ZiB < 1YiB);
    assert(1KB < 1KiB);
    assert(1MB < 1MiB);
    assert(1GB < 1GiB);
    assert(1TB < 1TiB);
    assert(1PB < 1PiB);
    assert(1EB < 1EiB);
    assert(1ZB < 1ZiB);
    assert(1YB < 1YiB);
}
