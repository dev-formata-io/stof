//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//


#[test]
fn len() {
    let bytes: blob = 'hello, world';
    assert_eq(bytes.len(), 12);
}

#[test]
fn at() {
    let bytes: blob = 'hello, world';
    let byte = bytes[2];
    assert_eq(byte, 108);
}

#[test]
fn iter() {
    let bytes: blob = 'hello, world';
    let other = [];
    
    for (const byte in bytes) other.push_back(byte);
    other = other as blob;

    assert_eq(other, bytes);
    assert_eq(other as str, 'hello, world');
}

#[test]
fn utf8() {
    let bytes: blob = 'hello, world';
    assert_eq(bytes.utf8(), 'hello, world');

    let other = Blob.from_utf8('hello, world');
    assert_eq(other, bytes);
}

#[test]
fn base64() {
    let bytes: blob = 'hello, world';
    let base64 = bytes.base64();

    let other = Blob.from_base64(base64);
    assert_eq(other, bytes);
    assert_eq(other as str, 'hello, world');
}

#[test]
fn url_safe_base64() {
    let bytes: blob = 'hello, world';
    let base64 = bytes.url_base64();

    let other = Blob.from_url_base64(base64);
    assert_eq(other, bytes);
    assert_eq(other as str, 'hello, world');
}
