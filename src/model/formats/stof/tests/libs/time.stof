//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//


#[test]
fn now() {
    const now = Time.now();
    assert_eq(typeof now, 'ms');
    assert(now > 100ms);
}

#[test]
fn now_ns() {
    const now = Time.now_ns();
    assert_eq(typeof now, 'ns');
    assert(now > 100ms);
}

#[test]
fn diff() {
    const now = Time.now();
    Time.sleep(20ms); // same as "sleep(20ms)" in Std
    const diff = Time.diff(now);
    assert(diff >= 20ms);
}

#[test]
fn diff_ns() {
    const now = Time.now_ns();
    Time.sleep(20ms);
    const diff = Time.diff_ns(now);

    assert_eq(typeof diff, 'ns');
    assert(diff >= 20ms);
}

#[test]
fn rfc3339() {
    const now = Time.now_rfc3339();
    const ts = Time.from_rfc3339(now);

    const other = Time.to_rfc3339(ts);
    const ots = Time.from_rfc3339(other);

    assert_eq(ts.round(5), ots.round(5));
    assert(now.len() > 0);
}

#[test]
fn rfc2822() {
    const now = Time.now_rfc2822();
    const ts = Time.from_rfc2822(now);

    const other = Time.to_rfc2822(ts);
    const ots = Time.from_rfc2822(other);

    assert_eq(ts.round(5), ots.round(5));
    assert(now.len() > 0);
}
