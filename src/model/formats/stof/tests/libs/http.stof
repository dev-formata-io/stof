//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//


#[test]
fn get_request() {
    if (lib('Http')) {
        const resp: map = await Http.fetch('https://restcountries.com/v3.1/region/europe');
        assert(Http.success(resp));
        assert_not(Http.client_error(resp));
        assert_not(Http.server_error(resp));

        const size = Http.size(resp) as KiB;
        assert(size > 100KiB);

        const body = Http.parse(resp, new {});
        for (const country in body.field) {
            //pln(country.name.common);
        }
        drop(body);
    }
}

#[test]
fn get_requests() {
    if (lib('Http')) {
        const handles = [];
        for (let i in 10) {
            handles.push_back(Http.fetch('https://restcountries.com/v3.1/region/europe'));
        }
        for (const response in await handles) {
            pln(response.get('bytes'));
        }
    }
}
