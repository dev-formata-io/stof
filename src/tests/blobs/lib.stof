//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

#[test]
fn size_len() {
    let blb = "hello" as blob;
    assertEq(blb.len(), 5);
    assertEq(blb.size(), 5);
}

#[test]
fn at() {
    let blb = "hello" as blob;
    let e = blb[1];
    let o = blb.at(4);
    assertEq(([e, o] as blob) as str, "eo");
}

#[test]
fn iteration() {
    let res = "";
    let blb = "hello" as blob;
    for (char in blb) {
        let ch = ([char] as blob) as str;
        res += ch;
    }
    assertEq(res, "hello");
}

#[test]
fn utf8_functions() {
    let blb = Blob.fromUtf8("hello, world");
    assertEq(typeof blb, "blob");
    
    let val = blb.utf8();
    assertEq(val, "hello, world");
}

#[test]
fn base64_standard() {
    let blb: blob = "hello, world";
    
    let base = blb.base64();
    assertEq(typeof base, "str");
    assert(base.len() > 0);
    
    let decoded = Blob.fromBase64(base);
    let val = decoded as str;
    assertEq(val, "hello, world");
}

#[test]
fn base64_urlsafe() {
    let blb: blob = "hello, world";
    
    let base = blb.urlSafeBase64();
    assertEq(typeof base, "str");
    assert(base.len() > 0);
    
    let decoded = Blob.fromUrlSafeBase64(base);
    let val = decoded as str;
    assertEq(val, "hello, world");
}
