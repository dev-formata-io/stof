//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

int calls: 0
fn dec(func: fn): fn {
    return (a: float, b: float): float => {
        self.calls += 1;
        return func.call(a, b);
    };
}

#[decorator(self.dec)]
fn add(a: float, b: float): float {
    return a + b;
}

#[test]
fn add_decorator() {
    let res = self.add(3, 4);
    assertEq(res, 7);
    assertEq(self.calls, 1);

    res = self.add(10, 10);
    assertEq(res, 20);
    assertEq(self.calls, 2);
}
