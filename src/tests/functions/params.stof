//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//


fn operate(a: float, b: float, c?: float) -> float {
    return if (c) ? a - b + c : a - b;
}

#[test]
fn named_parameters() {
    const a = 10;
    const b = 4;
    assertEq(self.operate(b = b, a = a), 6);
}

#[test]
#[errors]
fn invalid_named_parameters() {
    self.operate(b = 10, a = 20, d = 19);
}

#[test]
fn mixed_named() {
    assertEq(self.operate(c = 10, 20, 5), 25); // 20 - 5 + 10
    assertEq(self.operate(20, c = 10, 5), 25);
    assertEq(self.operate(20, 5, c = 10), 25);
    assertEq(self.operate(20, 5, 10), 25);
}

fn defaults(a: int = 10, b: int = 20, c: int = 30): int {
    return a - b + c;
}

#[test]
fn order_defaults() {
    assertEq(self.defaults(b = 10), 30);
    assertEq(self.defaults(c = 10), 0);

    assertEq(self.defaults(20, 5, 5), 20);
    assertEq(self.defaults(20, c = 13), 13);
    assertEq(self.defaults(c = 4, b = 12), 2);
    assertEq(self.defaults(c = 4, b = 22, a = 44), 26);
}
