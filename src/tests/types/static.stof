//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

type StaticType {
    fn hello(): str {
        return 'hello, world';
    }

    fn getX(): unknown {
        return self.x.or('default');
    }

    fn getInternal(): str {
        return StaticType::hello();
    }

    fn check_self(): obj {
        return self;
    }

    fn check_self_param(sf: obj = self): obj {
        return sf;
    }
}

#[test]
fn check_self() {
    const sf = Static.StaticType::check_self();
    assertEq(sf, self);
}

#[test]
fn check_self_param() {
    const sf = Static.StaticType::check_self_param();
    assertEq(sf, self);
}

#[test]
fn type_call() {
    let msg = Types.Static.StaticType::hello();
    assertEq(msg, 'hello, world');
}

#[test]
fn type_x() {
    let x = StaticType::getX();
    assertEq(x, 'default');
}

#[test]
fn internal() {
    let msg = StaticType::getInternal();
    assertEq(msg, 'hello, world');
}

sub: {
    x: 42

    #[test]
    fn type_x() {
        let x = StaticType::getX();
        assertEq(x, 42);
    }
}
