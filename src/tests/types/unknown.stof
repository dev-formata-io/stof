//
// Copyright 2024 Formata, Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

#[test]
fn unknown_type() {
    let val: unknown = 32;
    assertEq(val, 32);
}


fn takes_unknown(val: unknown): unknown {
    if (typeof val == 'str') return val;
    return 100;
}
#[test]
fn unknown_parameters() {
    let res = self.takes_unknown('hello');
    assertEq(res, 'hello');
    
    res = self.takes_unknown(33);
    assertEq(res, 33);
}


type UnknownType {
    field: unknown;
}
UnknownType a: {
    field: 33
}
UnknownType b: {
    field: 'hello'
}
UnknownType c: {
    field: {
        yup: true
    }
}
#[test]
fn unknown_object_type() {
    assert(self.a.instanceOf('UnknownType'));
    assert(self.b.instanceOf('UnknownType'));
    assert(self.c.instanceOf('UnknownType'));
    assertEq(self.a.field, 33);
    assertEq(self.b.field, 'hello');
    assertEq(self.c.field.yup, true);
}
